void printInt(i : int){
   output_string(int_to_string(i),get_stdout());
   output_string("\n",get_stdout());
}

record Singly { head: int; next: Singly; }

Singly split(l: Singly) {
    var n = 0;
    var l1 = l;
    while (l1 != nil) { l1 = l1.next; n = n+1; };
    n = (n-1)/2;
    var last = l;
    while (n > 0) { last = last.next; n = n-1; };
    var l2 = last.next;
    last.next = nil;
    return l2;
}

Singly merge(a: Singly, b: Singly) {
    if (a == nil) return b;
    if (b == nil) return a;
    if (a.head > b.head) return merge(b, a);
    var res = a; // pointer to the very first element
    var l1: Singly = a;
    var l2: Singly = b;
    // invariant res->...->l1->...->null
    //                     l2->...->null
    //       and l1.head <= l2.head
    while (l2 != nil) {
        var v = l2.head;
        var n = l1.next;
        while (n != nil && n.head <= v) { l1 = n; n = n.next; };
        l1.next = l2;
        l2 = n;
    };
    return res;
}

Singly mergesort(l: Singly) {
    if (l == nil || l.next == nil) return l;
    var l2 = split(l);
    return merge(mergesort(l), mergesort(l2));
}

void print_list(l: Singly) {
    if (l == nil) { output_string("\n", get_stdout()); return; };
    printInt(l.head); 
    print_list(l.next);
}

record state { s : int; }
int random(s : state) { s.s = (s.s * 987 + 42) % 5003; return s.s; }

Singly random_list(n: int, s : state) {
    if (n == 0) return nil;
    return new Singly { head = random(s); next = random_list(n - 1, s);};
}

int main() {
    var l = new Singly { head = 4; next = new Singly { head = 1; next = new Singly { head = 2; next = new Singly { head = 5 ; next = new Singly { head = 3; next = nil;};};};};};
    print_list(l);
    print_list(mergesort(l));
    var l2 = random_list(100, new state { s = 0; });
    print_list(l2);
    print_list(mergesort(l2));
    return 0;
}