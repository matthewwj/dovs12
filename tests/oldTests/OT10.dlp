/*let test_declared_var_in_inner_used_in_outer = [
  Ast.VarDeclStm (DeclBlock [
    Declaration {
      name = Ast.Ident {name = "x"};
      tp = Some Ast.Int;
      body = Ast.Integer {int = 5L};
    };
  ]);
  Ast.CompoundStm {
    stms = [
      Ast.VarDeclStm (DeclBlock [
        Declaration {
          name = Ast.Ident {name = "x"}; 
          tp = Some Ast.Int;
          body = Ast.Integer {int = 10L};
        };
      ]);
      Ast.ExprStm {expr = Some (Ast.BinOp {
        left = Ast.Lval (Ast.Var (Ast.Ident {name = "x"})); 
        op = Ast.Plus;
        right = Ast.Integer {int = 2L};
      })}
    ];
  };
  Ast.ExprStm {expr = Some (Ast.BinOp {
        left = Ast.Lval (Ast.Var (Ast.Ident {name = "x"})); 
        op = Ast.Plus;
        right = Ast.Integer {int = 2L};
      })};
  Ast.ReturnStm {
    ret = Ast.BinOp {
      left = Ast.Integer {int = 2L};
      op = Ast.Plus;
      right = Ast.Integer {int = 2L};
    };
  }
]*/